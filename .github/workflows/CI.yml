name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.11'
          - '1' # latest stable
          - 'nightly'
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Install dependencies
        run: julia --project=@. -e 'using Pkg; Pkg.instantiate()'
      - name: Test EDCore
        run: julia --project=@. -e 'using Pkg; Pkg.test("EDCore", coverage=true)'
      - name: Test MomentumED
        run: julia --project=@. -e 'using Pkg; Pkg.test("MomentumED", coverage=true)'
      - name: Process coverage
        uses: julia-actions/julia-processcoverage@v1
        with:
          directories: EDCore,MomentumED
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/cache@v1

      - name: Build and deploy documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs docs/make.jl
